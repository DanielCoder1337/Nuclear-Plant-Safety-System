
import com.sun.jndi.toolkit.url.Uri
import android.app.AlarmManager

import sun.rmi.runtime.Log


class MyFirebaseMessagingService : FirebaseMessagingService() {

    fun onMessageReceived(@NonNull remoteMessage: RemoteMessage) {
        var notificationTitle: String? = null
        var notificationBody: String? = null

        if (remoteMessage.getNotification() != null) {
            Log.d(
                TAG,
                "Message Notification Body: " + remoteMessage.getNotification().getBody()
            )
            notificationTitle = remoteMessage.getNotification().getTitle()
            notificationBody = remoteMessage.getNotification().getBody()
        }

        //TODO: local notifications here
        sendLocalNotification(notificationTitle, notificationBody)
    }

    private fun sendLocalNotification(
        notificationTitle: String?,
        notificationBody: String?
    ) {
        val intent = Intent(this, HomeActivity::class.java)
        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)
        val pendingIntent: PendingIntent = PendingIntent.getActivity(
            this, 0, intent,
            PendingIntent.FLAG_ONE_SHOT
        )
        val defaultSoundUri: Uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)
        val notificationBuilder: NotificationCompat.Builder = Builder(this)
            .setAutoCancel(true)
            .setSmallIcon(R.drawable.sigla4)
            .setContentIntent(pendingIntent)
            .setContentTitle(notificationTitle)
            .setContentText(notificationBody)
            .setSound(defaultSoundUri)
        val notificationManager: NotificationManager =
            getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

        notificationManager.notify(123, notificationBuilder.build())
    }

    companion object {
        private const val TAG = "FirebaseMessagingService"
    }

    //TODO: put in activity = FirebaseMessaging.getInstance().subscribeToTopic("pushNotifications");
}